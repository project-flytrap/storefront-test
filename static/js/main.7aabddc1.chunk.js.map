{"version":3,"sources":["components/header.js","components/Three/Scene.js","components/state.js","components/section.js","components/img/cloudwatercolor1.png","components/img/testMountain.png","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","style","borderRadius","Model","props","group","useRef","useGLTF","nodes","materials","ref","dispose","rotation","Math","PI","position","material","geometry","mesh_0","mesh_1","preload","state","sections","pages","zoom","top","createRef","offsetContext","createContext","Section","children","offset","factor","useThree","size","viewport","useContext","viewportWidth","width","viewportHeight","height","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","sectionHeight","aspect","useSection","parentOffset","undefined","useFrame","curY","current","y","curTop","lerp","Provider","value","HTMLContent","meshWizard","Html","fullscreen","App","colorManagement","camera","fov","fallback","intensity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aabddc1.chunk.js","sourcesContent":["import React, {useRef, useState} from \"react\";\r\n\r\n\r\n\r\nexport default function Header() {\r\n\r\n    return (\r\n        <header>\r\n        <div className='header-inner'>\r\n            <div className='logo'>FLYTRAP</div>\r\n            <nav>\r\n            <ul>\r\n                <li>\r\n                <a href='/'>discover</a>\r\n                </li>\r\n                <li>\r\n                <a href='/'>support</a>\r\n                </li>\r\n                <li>\r\n                <a href='/'>merchandise</a>\r\n                </li>\r\n                <li>\r\n                <a href='/'>reach</a>\r\n                </li>\r\n                <li className='btn' style={{borderRadius: \"10px\"}}>\r\n                    <a href='/'>order</a>\r\n                </li>\r\n            </ul>\r\n            </nav>\r\n        </div>\r\n        </header>\r\n    );\r\n}\r\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nauthor: fongoose (https://sketchfab.com/fongoose)\nlicense: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)\nsource: https://sketchfab.com/models/0641cc113cfb4a6ba7269aa696ae1512\ntitle: RPG Reptile Mage\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from 'drei'\n\nexport default function Model(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('../../../scene.gltf')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]}>\n        <group position={[-211.56, -190.06, -180.86]}>\n          <mesh material={materials['08___Default']} geometry={nodes.mesh_0.geometry} />\n          <mesh material={materials['02___Default']} geometry={nodes.mesh_1.geometry} />\n        </group>\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload('../../../scene.gltf')\n","import { createRef } from \"react\";\n\nconst state = {\n  sections: 3,\n  pages: 3,\n  zoom: 1,\n  top: createRef(),\n};\n\nexport default state;\n","import React, { createContext, useRef, useContext } from \"react\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport lerp from \"lerp\";\nimport state from \"./state\";\n\nconst offsetContext = createContext(0);\n\nfunction Section({ children, offset, factor, ...props }) {\n  const { offset: parentOffset, sectionHeight, aspect } = useSection();\n  const ref = useRef();\n  offset = offset !== undefined ? offset : parentOffset;\n  useFrame(() => {\n    const curY = ref.current.position.y;\n    const curTop = state.top.current / aspect;\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1);\n  });\n  return (\n    <offsetContext.Provider value={offset}>\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\n        <group ref={ref}>{children}</group>\n      </group>\n    </offsetContext.Provider>\n  );\n}\n\nfunction useSection() {\n  const { sections, pages, zoom } = state;\n  const { size, viewport } = useThree();\n  const offset = useContext(offsetContext);\n  const viewportWidth = viewport.width;\n  const viewportHeight = viewport.height;\n  const canvasWidth = viewportWidth / zoom;\n  const canvasHeight = viewportHeight / zoom;\n  const mobile = size.width < 700;\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1);\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6);\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1));\n  const aspect = size.height / viewportHeight;\n  return {\n    aspect,\n    viewport,\n    offset,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    mobile,\n    margin,\n    contentMaxWidth,\n    sectionHeight,\n  };\n}\n\nexport { Section, useSection };\n","export default __webpack_public_path__ + \"static/media/cloudwatercolor1.e0d7dbd3.png\";","export default __webpack_public_path__ + \"static/media/testMountain.0efb3b5d.png\";","import React, { useRef, useState, Suspense, useMemo } from \"react\";\nimport Header from './components/header';\nimport './App.scss';\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\nimport {Html, orbitalCamera, OrbitControls} from 'drei';\nimport * as THREE from \"three\";\nimport Model from './components/Three/Scene'\nimport { useSpring, a } from \"react-spring/three\";\nimport {Section} from './components/section';\nimport imgCloud1 from './components/img/cloudwatercolor1.png'\nimport imgMountain1 from './components/img/testMountain.png'\n\n\n/*\nfunction Image1() {\n  const texture1 = useLoader(THREE.TextureLoader, imgCloud1);\n  const mesh2 = useRef(null);\n  //useFrame(() => { mesh2.current.rotation.x = mesh2.current.rotation.y += 0.005 });\n\n  return (\n    <a.mesh ref={mesh2}>\n      <planeBufferGeometry attach='geometry' args={[80, 70]} />\n      <meshPhongMaterial alphaTest={0.01} opacity={1} transparency={true} map={texture1} attach='material' />\n    </a.mesh>\n  )\n}\n\nfunction Mountain() {\n  const texture1 = useLoader(THREE.TextureLoader, imgMountain1);\n  const mesh2 = useRef(null);\n  //useFrame(() => { mesh2.current.rotation.x = mesh2.current.rotation.y += 0.005 });\n\n  return (\n    <a.mesh ref={mesh2}>\n      <planeBufferGeometry attach='geometry' args={[300, 80]} />\n      <meshPhongMaterial alphaTest={0.9} opacity={1} transparency={true} map={texture1} attach='material' />\n    </a.mesh>\n  )\n}\n*/\n\nconst HTMLContent = () => {\n  const meshWizard = useRef(null);\n  useFrame(()=>{meshWizard.current.rotation.y+=0.003});\n  return (\n    <Section factor={1.5} offset = {1}>\n      <group position={[0,250,0]}>\n        <mesh position={[-80,35,-70]} ref={meshWizard}>\n          <Model/>\n        </mesh>\n        <Html fullscreen>\n          <div className='container'>\n            <h1 className='title'>HI</h1>\n          </div>\n        </Html> \n        \n        \n        \n      </group>\n\n    </Section>\n\n  )\n}\n/* Insert between </Html> and </group>\n<mesh position={[-10,-50,60]} rotation={[0,-Math.PI/5,Math.PI/9]}>\n          <Mountain/>\n        </mesh>\n        <mesh position={[90,20,-12]} >\n          <Image1/>\n        </mesh>\n\n*/\n\nfunction App() {\n  return (\n    <>\n      <Header />\n\n      <Canvas\n        colorManagement\n        camera={{position:[0,0,120], fov: 70}}>\n        \n        <Suspense fallback={null}>\n          <HTMLContent />\n        </Suspense>\n        <ambientLight intensity = {0.2}/>\n        <pointLight position={[-20, 0, 30]} intensity={0.3} />\n        <pointLight position={[20,-4, 50]} intensity={0.5}/>\n        \n\n      </Canvas>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}